{"version":3,"file":"component---src-pages-archive-js-1c9071bd034ec0d38aed.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/contentPage.js","webpack://gatsby-starter-hello-world/./src/components/eventCard.js","webpack://gatsby-starter-hello-world/./src/components/filterBar.js","webpack://gatsby-starter-hello-world/./src/components/footer.js","webpack://gatsby-starter-hello-world/./src/components/head.js","webpack://gatsby-starter-hello-world/./src/components/navbar.js","webpack://gatsby-starter-hello-world/./src/components/hero.js","webpack://gatsby-starter-hello-world/./src/components/layout.js","webpack://gatsby-starter-hello-world/./src/pages/archive.js"],"sourcesContent":["import React from \"react\"\n\nimport Layout from \"./layout\"\n\nexport default function ContentPage(props) {\n  return (\n    <Layout\n      title={props.headTitle || props.pageTitle}\n      redirect={props.redirect}\n    >\n      <section\n        className=\"section is-medium has-background-light\"\n        id={props.sectionId || \"\"}\n      >\n        {props.children}\n      </section>\n    </Layout>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\n\nconst EventCard = props => {\n  return (\n    <div\n      className=\"card is-flex is-flex-direction-column is-flex-grow-1\"\n      key={props.slug}\n    >\n      <Link to={`${props.slug}/#header`}>\n        <div className=\"card-image\">\n          <figure className=\"image\">\n            {props.image ? (\n              <GatsbyImage alt=\"picture of event\" image={props.image} />\n            ) : (\n              <StaticImage\n                alt=\"default event picture as no event picture was specified\"\n                src=\"../../static/defaultevent.png\"\n              />\n            )}\n          </figure>\n          <div className=\"tags is-overlay is-align-items-start is-justify-content-left p-3\">\n            {props.category?.map(e => (\n              <span\n                key={`${e}-category`}\n                className=\"tag is-capitalized is-white has-shadow\"\n              >\n                {e}\n              </span>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <p className=\"subtitle is-6\">\n                {props.date || null}\n                {props.endDate ? ` - ${props.endDate}` : null}\n              </p>\n              <p className=\"title is-6\">{props.title || \"New Event\"} </p>\n            </div>\n          </div>\n          <div className=\"content\"></div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default EventCard\n","import React, { useMemo } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst FilterBar = props => {\n  const data = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(filter: { fields: { category: { eq: \"projects\" } } }) {\n        nodes {\n          id\n          frontmatter {\n            category\n          }\n        }\n      }\n    }\n  `)\n\n  const uniqueCategories = useMemo(\n    () =>\n      data.allMarkdownRemark.nodes.reduce(\n        (categories, e) => {\n          const newCategories = e.frontmatter.category?.filter(\n            cat => !categories.includes(cat)\n          )\n          if (newCategories) categories.push(...newCategories)\n          return categories\n        },\n        [undefined]\n      ),\n    [data]\n  )\n\n  return (\n    <div className=\"tabs is-toggle\">\n      <ul className=\"is-flex-shrink-1 is-flex-wrap-wrap\">\n        {uniqueCategories.map(e => (\n          <li\n            className={`${e === props.activeCategory ? \"is-active\" : \"\"}`}\n            key={`${e}-tab`}\n          >\n            <button role=\"tab\" onClick={() => props.callback(e)}>\n              <span className=\"is-capitalized\">{e || \"All\"}</span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default FilterBar\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    {\n      cidaLogo: file(relativePath: { eq: \"logos/cida_logo.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n      uniLogo: file(relativePath: { eq: \"logos/essex_logo_white.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n    }\n  `)\n  return (\n    <footer className=\"footer has-background-dark has-text-light\">\n      <div className=\"container is-flex is-justify-content-space-evenly is-align-items-center\">\n        <div id=\"footer-address\">\n          <a\n            href=\"https://www.essex.ac.uk/centres-and-institutes/ideology-and-discourse-analysis\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            <GatsbyImage\n              className=\"logo\"\n              alt=\"cida logo\"\n              image={data.cidaLogo.childImageSharp.gatsbyImageData}\n            />\n          </a>\n          <address>\n            Department of Government\n            <br />\n            University of Essex\n            <br />\n            Wivenhoe Park\n            <br />\n            Colchester CO4 3SQ\n          </address>\n        </div>\n        <div id=\"footer-contact\">\n          <p>\n            <b>General Enquiries:</b>\n          </p>\n          <p>Tel: +44 (0) 1206 873333</p>\n          <p>\n            Email: &nbsp;\n            <a href=\"mailto:cida@essex.ac.uk\">cida@essex.ac.uk</a>\n          </p>\n        </div>\n        <div id=\"footer-uni-logo\">\n          <GatsbyImage\n            className=\"logo\"\n            alt=\"cida logo\"\n            image={data.uniLogo.childImageSharp.gatsbyImageData}\n          />\n        </div>\n        <div id=\"footer-credit\">\n          <p>Website design:</p>\n          <p>\n            <a\n              href=\"http://www.sebastianlobbers.com\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              Sebastian L&ouml;bbers\n            </a>\n          </p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\n\nconst Head = props => {\n  const title = props.title || \"Home\"\n  return (\n    <>\n      <meta charSet=\"UTF-8\" />\n      <meta name=\"HandheldFriendly\" content=\"True\" />\n      <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta name=\"description\" content=\"The official website for the Centre for Ideology and Discourse Analysis at the University of Essex.\" />\n      <meta name=\"keywords\" content=\"cida, university of essex, academic, phd, research\" />\n      <title>{`cIDA | ${title}`}</title>\n    </>\n  )\n}\n\nexport default Head\n","import React, { useState, useEffect } from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\n// Names of navbar elements and links to pages\nconst navItems = [\n  { name: \"About\", link: \"/about\" },\n  { name: \"What's on\", link: \"/whatson\" },\n  { name: \"Archive\", link: \"/archive\" },\n  { name: \"Publications\", link: \"/publications\" },\n  { name: \"Members\", link: \"/members\" },\n]\n\nconst NavBar = props => {\n  const [navTransparent, setNavTransparent] = useState(true)\n  const [mobileMenu, setMobileMenu] = useState(false)\n\n  const changeTransparency = () => {\n    const y = window.pageYOffset\n    setNavTransparent(y < 300 ? true : false)\n  }\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeTransparency)\n    return () => {\n      window.removeEventListener(\"scroll\", changeTransparency)\n    }\n  }, [])\n\n  const data = useStaticQuery(graphql`\n    {\n      logo: file(relativePath: { eq: \"logos/cida_logo.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, height: 60)\n        }\n      }\n    }\n  `)\n  return (\n    <nav\n      className={`navbar is-transparent is-fixed-top ${\n        navTransparent ? \"has-no-bg-color\" : \"has-background-white\"\n      }`}\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <Link to=\"/\">\n          <GatsbyImage\n            alt=\"Cida logo\"\n            image={data.logo.childImageSharp.gatsbyImageData}\n            loading=\"eager\"\n          />\n        </Link>\n        <button\n          className={`navbar-burger ${\n            !mobileMenu ? \"\" : \"is-active\"\n          } has-text-${navTransparent ? \"light\" : \"dark\"}`}\n          aria-label=\"Open the menu\"\n          aria-expanded=\"false\"\n          onClick={() => setMobileMenu(!mobileMenu)}\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </button>\n      </div>\n      <div className={`navbar-menu ${!mobileMenu ? \"\" : \"is-active\"}`}>\n        <div className=\"navbar-end\">\n          {navItems.map(item => {\n            return (\n              <Link\n                to={item.link}\n                key={item.name}\n                className={`navbar-item has-text-${\n                  navTransparent && !mobileMenu ? \"light\" : \"dark\"\n                } has-border-${\n                  navTransparent && !mobileMenu ? \"light\" : \"dark\"\n                }`}\n              >\n                {item.name}\n              </Link>\n            )\n          })}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport NavBar from \"./navbar\"\n\nconst Hero = props => {\n  const data = useStaticQuery(graphql`\n    {\n      hero: markdownRemark(fields: { category: { eq: \"hero\" } }) {\n        html\n        frontmatter {\n          title\n          image {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n      logo: file(relativePath: { eq: \"logos/essex_logo_white.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n    }\n  `)\n\n  const landingHero = (\n    <>\n      <h1\n        className=\"title is-1 is-size-2-mobile has-text-centered has-text-weight-bold has-text-light\"\n        dangerouslySetInnerHTML={{ __html: data.hero.html }}\n      ></h1>\n      <GatsbyImage\n        className=\"logo my-5\"\n        alt=\"University of Essex logo\"\n        loading=\"eager\"\n        image={data.logo.childImageSharp.gatsbyImageData}\n      />\n      <Link to=\"/#about\" className=\"has-text-light\">\n        <span className=\"icon is-large\">\n          <i className=\"fas fa-2x fa-circle-down\"></i>\n        </span>\n      </Link>\n    </>\n  )\n\n  const smallHero = (\n    <>\n      <h1 className=\"title is-1 is-size-2-mobile has-text-centered has-text-weight-bold has-text-light\">\n        {props.title}\n      </h1>\n    </>\n  )\n\n  return (\n    <section className={`hero ${props.title ? \"is-medium\" : \"is-fullheight\"}`}>\n      <div className=\"hero-head\">\n        <NavBar title={props.title || \"Home\"}></NavBar>\n      </div>\n      <GatsbyImage\n        alt=\"An abstract stock painting that serves as the background image for the website\"\n        loading=\"eager\"\n        className=\"background\"\n        image={data.hero.frontmatter.image.childImageSharp.gatsbyImageData}\n      />\n      <div className=\"hero-body text-overlay is-flex-direction-column is-justify-content-center\">\n        {!props.title ? landingHero : smallHero}\n      </div>\n      <div className=\"hero-foot text-overlay is-flex-direction-row is-justify-content-center\"></div>\n    </section>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport Footer from \"./footer\"\nimport Head from \"./head\"\nimport Hero from \"./hero\"\n\nexport default function Layout(props) {\n  return (\n    <>\n      <Head title={props.title} redirect={props.redirect}></Head>\n      <Hero title={props.title} />\n      {props.children}\n      <Footer></Footer>\n    </>\n  )\n}\n","import React, { useState, useMemo, useCallback } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport ContentPage from \"../components/contentPage\"\nimport EventCard from \"../components/eventCard\"\nimport FilterBar from \"../components/filterBar\"\n\n// Create an object where the keys are the year of the archived element\n// and the values is the remarkdata for that year\nconst groupByYear = array => {\n  return array.reduce((elementsByYear, element) => {\n    // Extract year from date with regex (regex looks for last number in string)\n    const year = `${element.frontmatter.date}`.match(/(\\d+)(?!.*\\d)/g)\n    if (year != null) {\n      elementsByYear[year[0]] = (elementsByYear[year[0]] || []).concat(element)\n    }\n    return elementsByYear\n  }, {})\n}\n\n// Return archived EventCards sorted by year and filtered, if filter is set of course ;)\nconst getCardsByYear = (elementsByYear, filterCategory) => {\n  // Sort by descending order\n  const sortedYears = Object.keys(elementsByYear)\n  sortedYears.sort()\n  sortedYears.reverse()\n\n  const cardsByYear = sortedYears.map(year => {\n    // Filter content\n    const filteredContent = filterCategory\n      ? elementsByYear[year].filter(element =>\n          element.frontmatter.category?.includes(filterCategory)\n        )\n      : elementsByYear[year]\n\n    // Return EventCards or undefined if no content exists for this year\n    return filteredContent.length > 0 ? (\n      <section key={`archive${year}`}>\n        <h1 className=\"title is-medium mt-6\">{year}</h1>\n        <hr className=\"has-background-grey\"></hr>\n\n        <div className=\"columns\">\n          {filteredContent.map(element => (\n            <div\n              className=\"column is-one-quarter-desktop is-one-third-tablet is-full-mobile is-flex\"\n              key={element.id}\n            >\n              <EventCard\n                slug={element.fields.slug}\n                title={element.frontmatter.title}\n                date={element.frontmatter.date}\n                endDate={element.frontmatter.endDate}\n                text={element.html}\n                category={element.frontmatter.category}\n                image={\n                  element.frontmatter.image?.childImageSharp.gatsbyImageData\n                }\n              />\n            </div>\n          ))}\n        </div>\n      </section>\n    ) : undefined\n  })\n\n  // If there is no content for the filter category at all, return a message\n  return !cardsByYear.every(e => e === undefined) ? (\n    cardsByYear\n  ) : (\n    <p className=\"is-size-6\">\n      Sorry, there is no archived content for this category yet.\n    </p>\n  )\n}\n\nconst PastProjects = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: {\n          fields: { category: { eq: \"projects\" }, hasPassed: { eq: true } }\n        }\n        sort: { fields: frontmatter___date, order: DESC }\n      ) {\n        nodes {\n          id\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"ddd DD MMM yy\")\n            endDate(formatString: \"ddd DD MMM yy\")\n            time\n            place\n            category\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED, aspectRatio: 1)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const [filterCategory, setFilterCategory] = useState(undefined)\n\n  const selectCategory = useCallback(category => setFilterCategory(category), [\n    setFilterCategory,\n  ])\n  const elementsByYear = useMemo(\n    () => groupByYear(data.allMarkdownRemark.nodes),\n    [data]\n  )\n\n  const content = !data.allMarkdownRemark ? (\n    <h1 className=\"is-size-2\">There are no entries to the archive yet.</h1>\n  ) : (\n    <>{getCardsByYear(elementsByYear, filterCategory)}</>\n  )\n\n  return (\n    <ContentPage pageTitle=\"Archive\">\n      <div className=\"container\">\n        <FilterBar callback={selectCategory} activeCategory={filterCategory} />\n        {content}\n      </div>\n    </ContentPage>\n  )\n}\n\nexport default PastProjects\n"],"names":["ContentPage","props","title","headTitle","pageTitle","redirect","className","id","sectionId","children","key","slug","to","image","G","alt","S","src","category","map","e","date","endDate","data","useStaticQuery","uniqueCategories","useMemo","allMarkdownRemark","nodes","reduce","categories","newCategories","frontmatter","filter","cat","includes","push","undefined","activeCategory","role","onClick","callback","href","target","rel","cidaLogo","childImageSharp","gatsbyImageData","uniLogo","charSet","name","content","httpEquiv","navItems","link","useState","navTransparent","setNavTransparent","mobileMenu","setMobileMenu","changeTransparency","y","window","pageYOffset","useEffect","addEventListener","removeEventListener","logo","loading","item","landingHero","dangerouslySetInnerHTML","__html","hero","html","smallHero","Layout","filterCategory","setFilterCategory","selectCategory","useCallback","elementsByYear","element","year","match","concat","sortedYears","Object","keys","sort","reverse","cardsByYear","filteredContent","length","fields","text","every","getCardsByYear"],"sourceRoot":""}