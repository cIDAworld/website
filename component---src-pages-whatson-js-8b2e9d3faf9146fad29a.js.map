{"version":3,"file":"component---src-pages-whatson-js-8b2e9d3faf9146fad29a.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/contentPage.js","webpack://gatsby-starter-hello-world/./src/components/eventCard.js","webpack://gatsby-starter-hello-world/./src/components/eventPage.js","webpack://gatsby-starter-hello-world/./src/components/filterBar.js","webpack://gatsby-starter-hello-world/./src/components/footer.js","webpack://gatsby-starter-hello-world/./src/components/head.js","webpack://gatsby-starter-hello-world/./src/components/navbar.js","webpack://gatsby-starter-hello-world/./src/components/hero.js","webpack://gatsby-starter-hello-world/./src/components/layout.js","webpack://gatsby-starter-hello-world/./src/pages/whatson.js"],"sourcesContent":["import React from \"react\"\n\nimport Layout from \"./layout\"\n\nexport default function ContentPage(props) {\n  return (\n    <Layout\n      title={props.headTitle || props.pageTitle}\n      redirect={props.redirect}\n    >\n      <section\n        className=\"section is-medium has-background-light\"\n        id={props.sectionId || \"\"}\n      >\n        {props.children}\n      </section>\n    </Layout>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\n\nconst EventCard = props => {\n  return (\n    <div\n      className=\"card is-flex is-flex-direction-column is-flex-grow-1\"\n      key={props.slug}\n    >\n      <Link to={`${props.slug}/#header`}>\n        <div className=\"card-image\">\n          <figure className=\"image\">\n            {props.image ? (\n              <GatsbyImage alt=\"picture of event\" image={props.image} />\n            ) : (\n              <StaticImage\n                alt=\"default event picture as no event picture was specified\"\n                src=\"../../static/defaultevent.png\"\n              />\n            )}\n          </figure>\n          <div className=\"tags is-overlay is-align-items-start is-justify-content-left p-3\">\n            {props.category?.map(e => (\n              <span\n                key={`${e}-category`}\n                className=\"tag is-capitalized is-white has-shadow\"\n              >\n                {e}\n              </span>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <p className=\"subtitle is-6\">\n                {props.date || null}\n                {props.endDate ? ` - ${props.endDate}` : null}\n              </p>\n              <p className=\"title is-6\">{props.title || \"New Event\"} </p>\n            </div>\n          </div>\n          <div className=\"content\"></div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default EventCard\n","import React, {useState} from \"react\"\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\n\nconst getDateJsx = (date, endDate) => {\n  if (date && endDate) {\n    return (\n      <>\n        <b>Date: </b>\n        from {date} to {endDate}\n        <br />\n      </>\n    )\n  } else if (date && !endDate) {\n    return (\n      <>\n        <b>Date: </b>\n        {date}\n        <br />\n      </>\n    )\n  } else return null\n}\n\nconst EventPage = props => {\n  const [showParagraph, setShowParagraph] = useState(props.highlighted?false:true)\n  const date = getDateJsx(props.date, props.endDate)\n\n  const time = props.time ? (\n    <>\n      <b>Time: </b>\n      {props.time}h\n      <br />\n    </>\n  ) : undefined\n\n  const where = props.place ? (\n    <>\n      <b>Where: </b>\n      {props.place} <br />\n    </>\n  ) : undefined\n\n  const pdf = props.pdfURL ? (\n    <a href={props.pdfURL} target=\"_blank\" rel=\"noopener noreferrer\">\n      Download pdf\n    </a>\n  ) : undefined\n\n  return (\n    <>\n      <div className=\"columns\">\n        <div className=\"column is-full\">\n          <h1 className=\"title is-large\">{props.title}</h1>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column is-one-third\">\n          <div className=\"card-image\">\n            {props.image ? (\n              <GatsbyImage\n                alt={`Image of ${props.title}`}\n                image={props.image}\n              />\n            ) : (\n              <StaticImage\n                alt=\"default event picture as no event picture was specified\"\n                src=\"../../static/defaultevent.png\"\n              />\n            )}\n            <div className=\"tags is-overlay is-align-items-start is-justify-content-left p-3\">\n              {props.category?.map(e => (\n                <span\n                  key={`${e}-category`}\n                  className=\"tag is-capitalized is-white has-shadow\"\n                >\n                  {e}\n                </span>\n              ))}\n            </div>\n          </div>\n          <aside>\n            {date}\n            {time}\n            {where}\n          </aside>\n        </div>\n        <div className=\"column is-two-thirds text-content\">\n          <div\n            className={showParagraph ? undefined : \"only-show-beginning\"}\n            dangerouslySetInnerHTML={{ __html: props.text }}\n          ></div>\n          {props.highlighted ? (\n            <>\n              <button\n                className=\"looks-like-link\"\n                onClick={() => setShowParagraph(!showParagraph)}\n              >\n                {showParagraph ? \"Show less\" : \"Read more\"}\n              </button>\n              <br />\n            </>\n          ) : undefined}\n          <br />\n          {pdf}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default EventPage\n","import React, { useMemo } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst FilterBar = props => {\n  const data = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(filter: { fields: { category: { eq: \"projects\" } } }) {\n        nodes {\n          id\n          frontmatter {\n            category\n          }\n        }\n      }\n    }\n  `)\n\n  const uniqueCategories = useMemo(\n    () =>\n      data.allMarkdownRemark.nodes.reduce(\n        (categories, e) => {\n          const newCategories = e.frontmatter.category?.filter(\n            cat => !categories.includes(cat)\n          )\n          if (newCategories) categories.push(...newCategories)\n          return categories\n        },\n        [undefined]\n      ),\n    [data]\n  )\n\n  return (\n    <div className=\"tabs is-toggle\">\n      <ul className=\"is-flex-shrink-1 is-flex-wrap-wrap\">\n        {uniqueCategories.map(e => (\n          <li\n            className={`${e === props.activeCategory ? \"is-active\" : \"\"}`}\n            key={`${e}-tab`}\n          >\n            <button role=\"tab\" onClick={() => props.callback(e)}>\n              <span className=\"is-capitalized\">{e || \"All\"}</span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default FilterBar\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    {\n      cidaLogo: file(relativePath: { eq: \"logos/cida_logo.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n      uniLogo: file(relativePath: { eq: \"logos/essex_logo_white.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n    }\n  `)\n  return (\n    <footer className=\"footer has-background-dark has-text-light\">\n      <div className=\"container is-flex is-justify-content-space-evenly is-align-items-center\">\n        <div id=\"footer-address\">\n          <a\n            href=\"https://www.essex.ac.uk/centres-and-institutes/ideology-and-discourse-analysis\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            <GatsbyImage\n              className=\"logo\"\n              alt=\"cida logo\"\n              image={data.cidaLogo.childImageSharp.gatsbyImageData}\n            />\n          </a>\n          <address>\n            Department of Government\n            <br />\n            University of Essex\n            <br />\n            Wivenhoe Park\n            <br />\n            Colchester CO4 3SQ\n          </address>\n        </div>\n        <div id=\"footer-contact\">\n          <p>\n            <b>General Enquiries:</b>\n          </p>\n          <p>Tel: +44 (0) 1206 873333</p>\n          <p>\n            Email: &nbsp;\n            <a href=\"mailto:cida@essex.ac.uk\">cida@essex.ac.uk</a>\n          </p>\n        </div>\n        <div id=\"footer-uni-logo\">\n          <GatsbyImage\n            className=\"logo\"\n            alt=\"cida logo\"\n            image={data.uniLogo.childImageSharp.gatsbyImageData}\n          />\n        </div>\n        <div id=\"footer-credit\">\n          <p>Website design:</p>\n          <p>\n            <a\n              href=\"http://www.sebastianlobbers.com\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              Sebastian L&ouml;bbers\n            </a>\n          </p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\n\nconst Head = props => {\n  const title = props.title || \"Home\"\n  return (\n    <>\n      <meta charSet=\"UTF-8\" />\n      <meta name=\"HandheldFriendly\" content=\"True\" />\n      <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta name=\"description\" content=\"The official website for the Centre for Ideology and Discourse Analysis at the University of Essex.\" />\n      <meta name=\"keywords\" content=\"cida, university of essex, academic, phd, research\" />\n      <title>{`cIDA | ${title}`}</title>\n    </>\n  )\n}\n\nexport default Head\n","import React, { useState, useEffect } from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\n// Names of navbar elements and links to pages\nconst navItems = [\n  { name: \"About\", link: \"/about\" },\n  { name: \"What's on\", link: \"/whatson\" },\n  { name: \"Archive\", link: \"/archive\" },\n  { name: \"Publications\", link: \"/publications\" },\n  { name: \"Members\", link: \"/members\" },\n]\n\nconst NavBar = props => {\n  const [navTransparent, setNavTransparent] = useState(true)\n  const [mobileMenu, setMobileMenu] = useState(false)\n\n  const changeTransparency = () => {\n    const y = window.pageYOffset\n    setNavTransparent(y < 300 ? true : false)\n  }\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeTransparency)\n    return () => {\n      window.removeEventListener(\"scroll\", changeTransparency)\n    }\n  }, [])\n\n  const data = useStaticQuery(graphql`\n    {\n      logo: file(relativePath: { eq: \"logos/cida_logo.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, height: 60)\n        }\n      }\n    }\n  `)\n  return (\n    <nav\n      className={`navbar is-transparent is-fixed-top ${\n        navTransparent ? \"has-no-bg-color\" : \"has-background-white\"\n      }`}\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <Link to=\"/\">\n          <GatsbyImage\n            alt=\"Cida logo\"\n            image={data.logo.childImageSharp.gatsbyImageData}\n            loading=\"eager\"\n          />\n        </Link>\n        <button\n          className={`navbar-burger ${\n            !mobileMenu ? \"\" : \"is-active\"\n          } has-text-${navTransparent ? \"light\" : \"dark\"}`}\n          aria-label=\"Open the menu\"\n          aria-expanded=\"false\"\n          onClick={() => setMobileMenu(!mobileMenu)}\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </button>\n      </div>\n      <div className={`navbar-menu ${!mobileMenu ? \"\" : \"is-active\"}`}>\n        <div className=\"navbar-end\">\n          {navItems.map(item => {\n            return (\n              <Link\n                to={item.link}\n                key={item.name}\n                className={`navbar-item has-text-${\n                  navTransparent && !mobileMenu ? \"light\" : \"dark\"\n                } has-border-${\n                  navTransparent && !mobileMenu ? \"light\" : \"dark\"\n                }`}\n              >\n                {item.name}\n              </Link>\n            )\n          })}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport NavBar from \"./navbar\"\n\nconst Hero = props => {\n  const data = useStaticQuery(graphql`\n    {\n      hero: markdownRemark(fields: { category: { eq: \"hero\" } }) {\n        html\n        frontmatter {\n          title\n          image {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n      logo: file(relativePath: { eq: \"logos/essex_logo_white.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n    }\n  `)\n\n  const landingHero = (\n    <>\n      <h1\n        className=\"title is-1 is-size-2-mobile has-text-centered has-text-weight-bold has-text-light\"\n        dangerouslySetInnerHTML={{ __html: data.hero.html }}\n      ></h1>\n      <GatsbyImage\n        className=\"logo my-5\"\n        alt=\"University of Essex logo\"\n        loading=\"eager\"\n        image={data.logo.childImageSharp.gatsbyImageData}\n      />\n      <Link to=\"/#about\" className=\"has-text-light\">\n        <span className=\"icon is-large\">\n          <i className=\"fas fa-2x fa-circle-down\"></i>\n        </span>\n      </Link>\n    </>\n  )\n\n  const smallHero = (\n    <>\n      <h1 className=\"title is-1 is-size-2-mobile has-text-centered has-text-weight-bold has-text-light\">\n        {props.title}\n      </h1>\n    </>\n  )\n\n  return (\n    <section className={`hero ${props.title ? \"is-medium\" : \"is-fullheight\"}`}>\n      <div className=\"hero-head\">\n        <NavBar title={props.title || \"Home\"}></NavBar>\n      </div>\n      <GatsbyImage\n        alt=\"An abstract stock painting that serves as the background image for the website\"\n        loading=\"eager\"\n        className=\"background\"\n        image={data.hero.frontmatter.image.childImageSharp.gatsbyImageData}\n      />\n      <div className=\"hero-body text-overlay is-flex-direction-column is-justify-content-center\">\n        {!props.title ? landingHero : smallHero}\n      </div>\n      <div className=\"hero-foot text-overlay is-flex-direction-row is-justify-content-center\"></div>\n    </section>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport Footer from \"./footer\"\nimport Head from \"./head\"\nimport Hero from \"./hero\"\n\nexport default function Layout(props) {\n  return (\n    <>\n      <Head title={props.title} redirect={props.redirect}></Head>\n      <Hero title={props.title} />\n      {props.children}\n      <Footer></Footer>\n    </>\n  )\n}\n","import React, { useCallback, useMemo, useState } from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport ContentPage from \"../components/contentPage\"\nimport EventPage from \"../components/eventPage\"\nimport EventCard from \"../components/eventCard\"\nimport TwitterCard from \"../components/twitterCard\"\nimport FilterBar from \"../components/filterBar\"\n\nconst getEventCards = (markdown, filterCategory, selectCategory) => {\n  if (markdown.length) {\n    const filteredContent = filterCategory\n      ? markdown.filter(element =>\n          element.frontmatter.category?.includes(filterCategory)\n        )\n      : markdown\n\n    return (\n      <>\n        <h1 className=\"title is-medium mt-6\">What's more</h1>\n        <FilterBar callback={selectCategory} activeCategory={filterCategory} />\n        <div className=\"columns is-multiline is-mobile\">\n          {filteredContent.length ? (\n            filteredContent.map(element => {\n              return (\n                <div\n                  className=\"column is-one-quarter-desktop is-one-third-tablet is-full-mobile is-flex\"\n                  key={element.id}\n                >\n                  <EventCard\n                    slug={element.fields.slug}\n                    title={element.frontmatter.title}\n                    date={element.frontmatter.date}\n                    endDate={element.frontmatter.endDate}\n                    text={element.html}\n                    category={element.frontmatter.category}\n                    callback={selectCategory}\n                    image={\n                      element.frontmatter.image?.childImageSharp.gatsbyImageData\n                    }\n                  />\n                </div>\n              )\n            })\n          ) : (\n            <div className=\"column is-full\">\n              <p className=\"is-size-6\">\n                Sorry, there is no content in this category at the moment.\n              </p>\n            </div>\n          )}\n        </div>\n      </>\n    )\n  }\n  return undefined\n}\n\nconst WhatsOn = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        filter: {\n          fields: { category: { eq: \"projects\" }, hasPassed: { eq: false } }\n        }\n        sort: { fields: [frontmatter___highlight, frontmatter___date] }\n      ) {\n        nodes {\n          id\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"ddd DD MMM yy\")\n            endDate(formatString: \"ddd DD MMM yy\")\n            time\n            place\n            category\n            pdf {\n              publicURL\n            }\n            highlight\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED, aspectRatio: 1)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n    // REINSERT INTO QUERY WHEN TWITTER ISSUES ARE FIXED\n  //   allTwitterStatusesUserTimelineTimeline(\n  //   sort: { fields: fields___date, order: DESC }\n  //   limit: 12\n  // ) {\n  //   nodes {\n  //     full_text\n  //     created_at\n  //     id_str\n\n  //     image {\n  //       childImageSharp {\n  //         gatsbyImageData(height: 200, width: 600)\n  //       }\n  //     }\n  //     retweeted_status {\n  //       user {\n  //         name\n  //         profile_banner_url\n  //       }\n  //     }\n  //   }\n  // }\n\n  const [filterCategory, setFilterCategory] = useState(undefined)\n\n  const selectCategory = useCallback(\n    category => setFilterCategory(category),\n    [setFilterCategory]\n  )\n\n  const highlightPage = useMemo(() => {\n    /* markdown remark is sorted first by highlight flag and then by date,\n          so the first entry will either be a highlighted entry or, \n          if no entry was highlighted, the most recent one */\n    const highlight = data.allMarkdownRemark.nodes[0]\n\n    return highlight ? (\n      <EventPage\n        title={highlight.frontmatter.title}\n        date={highlight.frontmatter.date}\n        time={highlight.frontmatter.time}\n        place={highlight.frontmatter.place}\n        text={highlight.html}\n        image={highlight.frontmatter.image?.childImageSharp.gatsbyImageData}\n        key={highlight.id}\n        pdfURL={highlight.frontmatter.pdf?.publicURL}\n        category={highlight.frontmatter.category}\n        highlighted={true}\n      />\n    ) : undefined\n  }, [data])\n\n  // const twitterNews = useMemo(\n  //   () => (\n  //     <>\n  //       <h1 className=\"title is-medium mt-6\">News</h1>\n  //       <div className=\"columns is-multiline is-mobile\">\n  //         {data.allTwitterStatusesUserTimelineTimeline.nodes.map(\n  //           (element, i) => (\n  //             <div\n  //               className=\"column is-one-quarter-desktop is-one-third-tablet is-full-mobile is-flex\"\n  //               key={element.id_str}\n  //             >\n  //               <TwitterCard\n  //                 author={element.retweeted_status?.user.name || \"cIDA\"}\n  //                 date={new Date(element.created_at).toDateString()}\n  //                 text={element.full_text}\n  //                 image={element.image?.childImageSharp?.gatsbyImageData}\n  //                 link={`https://www.twitter.com/cIDA_essex/status/${element.id_str}`}\n  //               />\n  //             </div>\n  //           )\n  //         )}\n  //       </div>\n  //     </>\n  //   ),\n  //   [data]\n  // )\n\n  return (\n    <ContentPage pageTitle=\"What's on\">\n      <div className=\"container\">\n        {highlightPage}\n        {getEventCards(\n          data.allMarkdownRemark.nodes.slice(1),\n          filterCategory,\n          selectCategory\n        )}\n        {/* {twitterNews} */}\n      </div>\n    </ContentPage>\n  )\n}\n\nexport default WhatsOn\n"],"names":["ContentPage","props","title","headTitle","pageTitle","redirect","className","id","sectionId","children","key","slug","to","image","G","alt","S","src","category","map","e","date","endDate","useState","highlighted","showParagraph","setShowParagraph","getDateJsx","time","undefined","where","place","pdf","pdfURL","href","target","rel","dangerouslySetInnerHTML","__html","text","onClick","data","useStaticQuery","uniqueCategories","useMemo","allMarkdownRemark","nodes","reduce","categories","newCategories","frontmatter","filter","cat","includes","push","activeCategory","role","callback","cidaLogo","childImageSharp","gatsbyImageData","uniLogo","charSet","name","content","httpEquiv","navItems","link","navTransparent","setNavTransparent","mobileMenu","setMobileMenu","changeTransparency","y","window","pageYOffset","useEffect","addEventListener","removeEventListener","logo","loading","item","landingHero","hero","html","smallHero","Layout","filterCategory","setFilterCategory","selectCategory","useCallback","highlightPage","highlight","publicURL","markdown","length","filteredContent","element","fields","getEventCards","slice"],"sourceRoot":""}