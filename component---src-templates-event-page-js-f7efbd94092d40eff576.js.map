{"version":3,"file":"component---src-templates-event-page-js-f7efbd94092d40eff576.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/contentPage.js","webpack://gatsby-starter-hello-world/./src/components/eventPage.js","webpack://gatsby-starter-hello-world/./src/components/footer.js","webpack://gatsby-starter-hello-world/./src/components/head.js","webpack://gatsby-starter-hello-world/./src/components/navbar.js","webpack://gatsby-starter-hello-world/./src/components/hero.js","webpack://gatsby-starter-hello-world/./src/components/layout.js","webpack://gatsby-starter-hello-world/./src/templates/eventPage.js"],"sourcesContent":["import React from \"react\"\n\nimport Layout from \"./layout\"\n\nexport default function ContentPage(props) {\n  return (\n    <Layout\n      title={props.headTitle || props.pageTitle}\n      redirect={props.redirect}\n    >\n      <section\n        className=\"section is-medium has-background-light\"\n        id={props.sectionId || \"\"}\n      >\n        {props.children}\n      </section>\n    </Layout>\n  )\n}\n","import React, {useState} from \"react\"\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\n\nconst getDateJsx = (date, endDate) => {\n  if (date && endDate) {\n    return (\n      <>\n        <b>Date: </b>\n        from {date} to {endDate}\n        <br />\n      </>\n    )\n  } else if (date && !endDate) {\n    return (\n      <>\n        <b>Date: </b>\n        {date}\n        <br />\n      </>\n    )\n  } else return null\n}\n\nconst EventPage = props => {\n  const [showParagraph, setShowParagraph] = useState(props.highlighted?false:true)\n  const date = getDateJsx(props.date, props.endDate)\n\n  const time = props.time ? (\n    <>\n      <b>Time: </b>\n      {props.time}h\n      <br />\n    </>\n  ) : undefined\n\n  const where = props.place ? (\n    <>\n      <b>Where: </b>\n      {props.place} <br />\n    </>\n  ) : undefined\n\n  const pdf = props.pdfURL ? (\n    <a href={props.pdfURL} target=\"_blank\" rel=\"noopener noreferrer\">\n      Download pdf\n    </a>\n  ) : undefined\n\n  return (\n    <>\n      <div className=\"columns\">\n        <div className=\"column is-full\">\n          <h1 className=\"title is-large\">{props.title}</h1>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column is-one-third\">\n          <div className=\"card-image\">\n            {props.image ? (\n              <GatsbyImage\n                alt={`Image of ${props.title}`}\n                image={props.image}\n              />\n            ) : (\n              <StaticImage\n                alt=\"default event picture as no event picture was specified\"\n                src=\"../../static/defaultevent.png\"\n              />\n            )}\n            <div className=\"tags is-overlay is-align-items-start is-justify-content-left p-3\">\n              {props.category?.map(e => (\n                <span\n                  key={`${e}-category`}\n                  className=\"tag is-capitalized is-white has-shadow\"\n                >\n                  {e}\n                </span>\n              ))}\n            </div>\n          </div>\n          <aside>\n            {date}\n            {time}\n            {where}\n          </aside>\n        </div>\n        <div className=\"column is-two-thirds text-content\">\n          <div\n            className={showParagraph ? undefined : \"only-show-beginning\"}\n            dangerouslySetInnerHTML={{ __html: props.text }}\n          ></div>\n          {props.highlighted ? (\n            <>\n              <button\n                className=\"looks-like-link\"\n                onClick={() => setShowParagraph(!showParagraph)}\n              >\n                {showParagraph ? \"Show less\" : \"Read more\"}\n              </button>\n              <br />\n            </>\n          ) : undefined}\n          <br />\n          {pdf}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default EventPage\n","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    {\n      cidaLogo: file(relativePath: { eq: \"logos/cida_logo.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n      uniLogo: file(relativePath: { eq: \"logos/essex_logo_white.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n    }\n  `)\n  return (\n    <footer className=\"footer has-background-dark has-text-light\">\n      <div className=\"container is-flex is-justify-content-space-evenly is-align-items-center\">\n        <div id=\"footer-address\">\n          <a\n            href=\"https://www.essex.ac.uk/centres-and-institutes/ideology-and-discourse-analysis\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            <GatsbyImage\n              className=\"logo\"\n              alt=\"cida logo\"\n              image={data.cidaLogo.childImageSharp.gatsbyImageData}\n            />\n          </a>\n          <address>\n            Department of Government\n            <br />\n            University of Essex\n            <br />\n            Wivenhoe Park\n            <br />\n            Colchester CO4 3SQ\n          </address>\n        </div>\n        <div id=\"footer-contact\">\n          <p>\n            <b>General Enquiries:</b>\n          </p>\n          <p>Tel: +44 (0) 1206 873333</p>\n          <p>\n            Email: &nbsp;\n            <a href=\"mailto:cida@essex.ac.uk\">cida@essex.ac.uk</a>\n          </p>\n        </div>\n        <div id=\"footer-uni-logo\">\n          <GatsbyImage\n            className=\"logo\"\n            alt=\"cida logo\"\n            image={data.uniLogo.childImageSharp.gatsbyImageData}\n          />\n        </div>\n        <div id=\"footer-credit\">\n          <p>Website design:</p>\n          <p>\n            <a\n              href=\"http://www.sebastianlobbers.com\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              Sebastian L&ouml;bbers\n            </a>\n          </p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\n\nconst Head = props => {\n  const title = props.title || \"Home\"\n  return (\n    <>\n      <meta charSet=\"UTF-8\" />\n      <meta name=\"HandheldFriendly\" content=\"True\" />\n      <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      <meta name=\"description\" content=\"The official website for the Centre for Ideology and Discourse Analysis at the University of Essex.\" />\n      <meta name=\"keywords\" content=\"cida, university of essex, academic, phd, research\" />\n      <title>{`cIDA | ${title}`}</title>\n    </>\n  )\n}\n\nexport default Head\n","import React, { useState, useEffect } from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\n// Names of navbar elements and links to pages\nconst navItems = [\n  { name: \"About\", link: \"/about\" },\n  { name: \"What's on\", link: \"/whatson\" },\n  { name: \"Archive\", link: \"/archive\" },\n  { name: \"Publications\", link: \"/publications\" },\n  { name: \"Members\", link: \"/members\" },\n]\n\nconst NavBar = props => {\n  const [navTransparent, setNavTransparent] = useState(true)\n  const [mobileMenu, setMobileMenu] = useState(false)\n\n  const changeTransparency = () => {\n    const y = window.pageYOffset\n    setNavTransparent(y < 300 ? true : false)\n  }\n  useEffect(() => {\n    window.addEventListener(\"scroll\", changeTransparency)\n    return () => {\n      window.removeEventListener(\"scroll\", changeTransparency)\n    }\n  }, [])\n\n  const data = useStaticQuery(graphql`\n    {\n      logo: file(relativePath: { eq: \"logos/cida_logo.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, height: 60)\n        }\n      }\n    }\n  `)\n  return (\n    <nav\n      className={`navbar is-transparent is-fixed-top ${\n        navTransparent ? \"has-no-bg-color\" : \"has-background-white\"\n      }`}\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <Link to=\"/\">\n          <GatsbyImage\n            alt=\"Cida logo\"\n            image={data.logo.childImageSharp.gatsbyImageData}\n            loading=\"eager\"\n          />\n        </Link>\n        <button\n          className={`navbar-burger ${\n            !mobileMenu ? \"\" : \"is-active\"\n          } has-text-${navTransparent ? \"light\" : \"dark\"}`}\n          aria-label=\"Open the menu\"\n          aria-expanded=\"false\"\n          onClick={() => setMobileMenu(!mobileMenu)}\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </button>\n      </div>\n      <div className={`navbar-menu ${!mobileMenu ? \"\" : \"is-active\"}`}>\n        <div className=\"navbar-end\">\n          {navItems.map(item => {\n            return (\n              <Link\n                to={item.link}\n                key={item.name}\n                className={`navbar-item has-text-${\n                  navTransparent && !mobileMenu ? \"light\" : \"dark\"\n                } has-border-${\n                  navTransparent && !mobileMenu ? \"light\" : \"dark\"\n                }`}\n              >\n                {item.name}\n              </Link>\n            )\n          })}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React from \"react\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport NavBar from \"./navbar\"\n\nconst Hero = props => {\n  const data = useStaticQuery(graphql`\n    {\n      hero: markdownRemark(fields: { category: { eq: \"hero\" } }) {\n        html\n        frontmatter {\n          title\n          image {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n      logo: file(relativePath: { eq: \"logos/essex_logo_white.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n    }\n  `)\n\n  const landingHero = (\n    <>\n      <h1\n        className=\"title is-1 is-size-2-mobile has-text-centered has-text-weight-bold has-text-light\"\n        dangerouslySetInnerHTML={{ __html: data.hero.html }}\n      ></h1>\n      <GatsbyImage\n        className=\"logo my-5\"\n        alt=\"University of Essex logo\"\n        loading=\"eager\"\n        image={data.logo.childImageSharp.gatsbyImageData}\n      />\n      <Link to=\"/#about\" className=\"has-text-light\">\n        <span className=\"icon is-large\">\n          <i className=\"fas fa-2x fa-circle-down\"></i>\n        </span>\n      </Link>\n    </>\n  )\n\n  const smallHero = (\n    <>\n      <h1 className=\"title is-1 is-size-2-mobile has-text-centered has-text-weight-bold has-text-light\">\n        {props.title}\n      </h1>\n    </>\n  )\n\n  return (\n    <section className={`hero ${props.title ? \"is-medium\" : \"is-fullheight\"}`}>\n      <div className=\"hero-head\">\n        <NavBar title={props.title || \"Home\"}></NavBar>\n      </div>\n      <GatsbyImage\n        alt=\"An abstract stock painting that serves as the background image for the website\"\n        loading=\"eager\"\n        className=\"background\"\n        image={data.hero.frontmatter.image.childImageSharp.gatsbyImageData}\n      />\n      <div className=\"hero-body text-overlay is-flex-direction-column is-justify-content-center\">\n        {!props.title ? landingHero : smallHero}\n      </div>\n      <div className=\"hero-foot text-overlay is-flex-direction-row is-justify-content-center\"></div>\n    </section>\n  )\n}\n\nexport default Hero\n","import React from \"react\"\nimport Footer from \"./footer\"\nimport Head from \"./head\"\nimport Hero from \"./hero\"\n\nexport default function Layout(props) {\n  return (\n    <>\n      <Head title={props.title} redirect={props.redirect}></Head>\n      <Hero title={props.title} />\n      {props.children}\n      <Footer></Footer>\n    </>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport ContentPage from \"../components/contentPage\"\nimport EventPage from \"../components/eventPage\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, fields, html } = markdownRemark\n\n  return (\n    <ContentPage\n      pageTitle={fields.hasPassed ? \"Archive\" : \"What's on\"}\n      sectionId=\"header\"\n    >\n      <div className=\"container\">\n        <EventPage\n          title={frontmatter.title || \"New Event\"}\n          date={frontmatter.date}\n          endDate={frontmatter.endDate}\n          time={frontmatter.time}\n          place={frontmatter.place}\n          image={frontmatter.image?.childImageSharp.gatsbyImageData}\n          pdfURL={frontmatter.pdf?.publicURL}\n          category={frontmatter.category}\n          text={html}\n        />\n      </div>\n    </ContentPage>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        hasPassed\n      }\n      frontmatter {\n        title\n        date(formatString: \"dddd, D MMMM yyyy\")\n        endDate(formatString: \"dddd, D MMMM yyyy\")\n        time\n        place\n        category\n        pdf {\n          publicURL\n        }\n        image {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED, aspectRatio: 1.0)\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["ContentPage","props","title","headTitle","pageTitle","redirect","className","id","sectionId","children","useState","highlighted","showParagraph","setShowParagraph","date","endDate","getDateJsx","time","undefined","where","place","pdf","pdfURL","href","target","rel","image","G","alt","S","src","category","map","e","key","dangerouslySetInnerHTML","__html","text","onClick","data","useStaticQuery","cidaLogo","childImageSharp","gatsbyImageData","uniLogo","charSet","name","content","httpEquiv","navItems","link","navTransparent","setNavTransparent","mobileMenu","setMobileMenu","changeTransparency","y","window","pageYOffset","useEffect","addEventListener","removeEventListener","role","to","logo","loading","item","landingHero","hero","html","smallHero","frontmatter","Layout","Template","markdownRemark","fields","hasPassed","publicURL"],"sourceRoot":""}